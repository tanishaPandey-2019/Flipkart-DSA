#include<iostream>
#include<algorithm>
using namespace std;

struct Node
{
	int data;
	Node* left;
	Node* right;

	Node(int val)
	{
		data = val;
		left = NULL;
		right = NULL;
	}
};

int calculateHeight(Node* root)
{
	if (root == NULL)
	{
		return 0;
	}

	return max(calculateHeight(root->left), calculateHeight(root->right)) + 1;
}
int calculateDiameter(Node* root)
{
	if (root == NULL)
	{
		return 0;
	}
	int leftHeight = calculateHeight(root->left);
	int rightHeight = calculateHeight(root->right);
	int currentDiameter = leftHeight + rightHeight + 1;

	int leftDiameter = calculateDiameter(root->left);
	int rightDiameter = calculateDiameter(root->right);

	return max(currentDiameter,max(leftDiameter,rightDiameter));
}

int main()
{
	
	Node* root = new Node(5);
	root->left = new Node(6);
	root->right = new Node(3);
	root->left->left = new Node(9);
	root->left->right = new Node(1);
	root->right->left = new Node(2);
	root->right->right = new Node(1);

	int ans = calculateDiameter(root);
	cout << ans;
	


	return 0;
}
