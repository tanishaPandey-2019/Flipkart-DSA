#include<iostream>
#include<algorithm>
using namespace std;

struct Node
{
	int data;
	Node* left;
	Node* right;

	Node(int val)
	{
		data = val;
		left = NULL;
		right = NULL;
	}
};



int calculateDiameter(Node* root, int* height)
{
	if (root == NULL)
	{
		*height = 0;
		return 0;
	}
	
	int leftHeight = 0, rightHeight = 0;

	int leftDiameter = calculateDiameter(root->left, &leftHeight);
	int rightDiameter = calculateDiameter(root->right, &rightHeight);
	int currentDiameter = leftHeight + rightHeight + 1;

	*height = max(leftHeight, rightHeight) + 1;

	return max(currentDiameter,max(leftDiameter,rightDiameter));
}

int main()
{
	
	Node* root = new Node(5);
	root->left = new Node(6);
	root->right = new Node(3);
	root->left->left = new Node(9);
	root->left->right = new Node(1);
	root->right->left = new Node(2);
	root->right->right = new Node(1);

	int height = 0;
	int ans = calculateDiameter(root,&height);
	cout << ans;
	


	return 0;
}
