#include<iostream>
#include<stack>
#include<vector>
#include<string>
using namespace std;

bool checkParanthesis(string str)
{
	stack<char> s;
	int n = str.size();
	int ans = true;
	for (int i = 0; i < n; i++)
	{
		if (str[i] == '(' || str[i] == '[' || str[i] == '{')
		{
			s.push(str[i]);
		}
		else if(str[i] == ')')
		{
			if (!s.empty() && s.top() == '(')
			{
				s.pop();
			}
			else
			{
				ans = false;
				break;
			}
		}

		else if (str[i] == '}')
		{
			if (!s.empty() && s.top() == '{')
			{
				s.pop();
			}
			else
			{
				ans = false;
				break;
			}

		}

		else if (str[i] == ']')
		{
			if (!s.empty() && s.top() == '[')
			{
				s.pop();
			}
			else
			{
				ans = false;
				break;
			}

		}

	}
	if (!s.empty())
		return false;

	return ans;
}

int main()
{
	string str = "[";

	if (checkParanthesis(str))
		cout << "Balanced";
	else
		cout << "Not Balanced";


	return 0;
}
