#include<iostream>
using namespace std;

struct Node
{
	int data;
	Node* left;
	Node* right;

	Node(int val)
	{
		data = val;
		left = NULL;
		right = NULL;
	}

};

Node* insertBST(Node* root, int val)
{
	if (root == NULL)
	{
		return new  Node(val);
	}
	if (val < root->data)
		root->left = insertBST(root->left, val);
	else
		root->right = insertBST(root->right, val);


	return root;
}

Node* searchBST(Node* root, int val)
{
	if (root == NULL)
		return NULL;

	if (root->data == val)
		return root;

	if (val < root->data)
		return searchBST(root->left, val);
	

	return searchBST(root->right, val);
}

//function main
int main()
{
	Node* root = NULL;
	root = insertBST(root, 5);
	insertBST(root, 1);
	insertBST(root, 3);
	insertBST(root, 4);
	insertBST(root, 2);
	insertBST(root, 7);

	if (searchBST(root, 0) == NULL)
	{
		cout << "Key doesn't exist";
	}
	else
	{
		cout << "Key exists";
	}

	return 0;
}
