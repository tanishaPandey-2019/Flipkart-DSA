vector<int> duplicates(int arr[], int n) {
        
        unordered_map<int,int> numsFreq;
        unordered_map<int,int> :: iterator itr;
        
        for(int i=0;i<n;i++)
        {
            if(numsFreq.find(arr[i]) != numsFreq.end())
            {
                itr = numsFreq.find(arr[i]);
                itr->second++;
            }
            else
            {
                numsFreq[arr[i]] = 1;
            }
        }
        
        vector<int>nums;
        for(itr = numsFreq.begin();itr!=numsFreq.end();itr++)
        {
            if(itr->second > 1)
            {
                nums.push_back(itr->first);
            }
        }
        
        if(nums.size() == 0)
        {
            nums.push_back(-1);
        }
        sort(nums.begin(),nums.end());
        return nums;
        // code here
    }
